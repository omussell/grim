<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bootstrapping a Secure Infrastructure</title>
    <link>/grim/</link>
    <description>Recent content on Bootstrapping a Secure Infrastructure</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Wed, 14 Mar 2018 21:47:09 +0000</lastBuildDate>
    
	<atom:link href="/grim/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Design</title>
      <link>/grim/design/</link>
      <pubDate>Wed, 14 Mar 2018 21:47:09 +0000</pubDate>
      
      <guid>/grim/design/</guid>
      <description>Detailed Design IPv6 IPv6 is the latest version of the IP protocol, which offers significant advantages over IPv4.
IPv6 uses a 128-bit address which allows a much larger address space, 2^128. A single /64 subnet has a size of 2^64 addresses which equates to the square of the entire IPv4 address space. An address is represented as eight groups of four hexadecimal digits with the groups separated by colons, e.</description>
    </item>
    
    <item>
      <title>Handling Go Dependencies</title>
      <link>/grim/homelab/</link>
      <pubDate>Wed, 14 Mar 2018 21:47:09 +0000</pubDate>
      
      <guid>/grim/homelab/</guid>
      <description>During development, you will often use go get to download libraries for import into the program which is useful for development but not so useful when building the finished product. Managing these dependencies over time is a hassle as they change frequently and can sometimes disappear entirely.
The dep tool provides a way of automatically scanning your import statements and evaluating all of the dependencies. It create some files Gopkg.</description>
    </item>
    
    <item>
      <title>Implementation</title>
      <link>/grim/implementation/</link>
      <pubDate>Wed, 14 Mar 2018 21:47:09 +0000</pubDate>
      
      <guid>/grim/implementation/</guid>
      <description>Implementation The architecture described in the design is only aimed at the infrastructure setup, not application servers. Each of the services provided can be accessed by other architectures based on different operating systems. So for example, Windows and Linux infrastructures would still be able to query the DNS service without any extra configuration.
StrictHostKeyChecking vs VerifyHostKeyDNS Problem: Problem Statement Do the StrictHostKeyChecking and VerifyHostKeyDNS options in ssh_config work together?</description>
    </item>
    
    <item>
      <title>Overview</title>
      <link>/grim/overview/</link>
      <pubDate>Wed, 14 Mar 2018 21:47:09 +0000</pubDate>
      
      <guid>/grim/overview/</guid>
      <description>Bootstrapping a Secure Infrastructure Oliver Mussell - 2016-2018
Summary Create an infrastructure with an emphasis on security, resiliency and ease of maintenance.
End Goal Produce a working implementation of a secure, resilient and easy to maintain infrastructure. This will be published in the form of version-controlled configuration documents, with the philosophy and background of the chosen configuration documented here. Anyone should be able to download the base operating system, and the configuration documents should convert that base OS into the desired state.</description>
    </item>
    
  </channel>
</rss>
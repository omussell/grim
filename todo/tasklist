Bootstrapping a Secure Infrastructure
---

# Create an infrastructure with an emphasis on security, resiliency and ease of maintenance

- Version Control
- Configuration Management
- Ad-Hoc change tools
- Host Install tools
- Directory servers
- Authentication servers
- Time servers
- Network file servers
- File replication servers
- Client file access
- Client OS update
- Client configuration management
- Mail
- Printing
- Monitoring
- Client application management




- Version Control
Must have a working VCS that can be used by config management as a backend and for storing all config and documents for the project.
Should be using Git 
Should use SSH, not HTTP(S)
Could be in monorepo format to keep everything together
Won't use subversion this time, because I haven't used it before. Use git initially but then switch to subversion once initial project is complete

- Configuration Management
Must have all server config in config management solution
Must be able to perform config management and orchestration
Should be able to perform host install and ad-hoc changes
Should be Saltstack, python based and has built in states/modules for FreeBSD

- Ad-Hoc change tools
Must be controlled via the config management solution
Must have some way of documenting/auditing changes that are made

- Host Install tools
Must be able to deploy/provision jails
Should be able to deploy bhyve VMs

- Directory servers
Must be usable for authorization services

- Authentication servers
Must be usable for authentication services

- Time servers
Must use OpenNTPd

- Network file servers
Could use pNFS for higher performance

- File replication servers
Should use features in ZFS

- Client file access
Must be constrained per authentication/authorization

- Client OS update
Could use openbsd for clients?
Could use ZFS boot environments, ZFS over SSH to clients to transfer new boot environment

- Client configuration management
Should use same system as server config management

- Mail
Must be secured with DNSSEC/DANE and S/MIME(A)

- Printing
Wont have for initial project. 

- Monitoring
Should be simple and robust
Should be able to send alerts when certain thresholds are exceeded

- Client application management
Should use same system as server config management



The initial project will use IPv4 to circumvent the need for a IPv6 router. The hosts used will be jails and may be provisioned manually to start.

For each objective above, the following non-functional requirements must be adhered to:

- All config exists in version control backed config management
- All data should be backed up somewhere
- Documentation exists for the specified config





Long term goals:
Start first round of implementation build
Rebuild test machine with zfs boot environments
IPv6 router build
Local package cache for freebsd packages
pkgbase

Short term goals:
Git server - Write a salt state to create a git server. Repo creation should be a separate state. User access should be via SSH with a service account.
DNS server with DNSSEC - Write a salt formula to set up a DNS server, probably using KnotDNS. Use a local unbound instance for resolution. Clients will use this DNS server via the IPv6 router advertisement options
NTP server - Use openntpd instead of ISC NTPd which is in base. Create a separate state to have clients use the server for their NTP needs.
SSH - Write salt state to have a standard sshd and ssh client setup. Include provision for service accounts to authenticate to specific authorized_keys files in /usr/local/ssh
Salt master and minion setup - Write a salt state to bootstrap the salt master and install salt minion. 

Syslog centralised logging - Create salt state for a central syslog server. Create a separate state for syslog clients.
Auditd - Create a salt state to configure auditd to audit events. zip, encrypt and transfer closed audit trails to a central server.
IPv6 router - Build a IPv6 router. Use this server as the router and NTP server. Clients should connect using ipsec
Buildbot - Create a state for buildbot master creation.
Prometheus - monitoring
Openntpd - replace base system ntpd


sendmail on base system? should it be replaced with postfix or can it just be disabled?
set roots password
remove src from freebsd-update.conf
salt_minion config
sudo



